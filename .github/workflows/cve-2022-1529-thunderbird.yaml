name: CVE-2022-1529-thunderbird

on:
  push:
    branches: 
      - main
    paths:
      - 'containers/cve-2022-1529-thunderbird/**'
  workflow_dispatch:
    branches:
      - main

permissions:
  contents: read

env:
  IMAGE_TAG: cve-2022-1529-thunderbird:1
  ECR_REPO_NAME: cve-2022-1529-thunderbird

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build the Docker image to be scanned
        run: |
          docker buildx build -f ${{ env.ECR_REPO_NAME }}/Dockerfile --platform linux/amd64 --tag ${{ env.IMAGE_TAG }} .

      - name: Scan container image with Tenable Cloud Security
        uses: ermetic/actions/container-image/scan@v1
        with:
          api-token: ${{ secrets.TENABLE_API_TOKEN }}
          api-url: https://us.app.ermetic.com
          name: ${{ env.IMAGE_TAG }}
      
      - name: Configure Amazon Web Services Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon Web Services Elastic Container Registry
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push image to Amazon Web Services Elastic Container Registry
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPO_NAME }}
        run: |
          docker build -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "$IMAGE_TAG has been pushed to $ECR_REGISTRY/$ECR_REPOSITORY"
          echo "Full image name: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"